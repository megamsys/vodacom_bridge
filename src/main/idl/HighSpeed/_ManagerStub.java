package HighSpeed;


/**
* HighSpeed/_ManagerStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from HighSpeedExt.idl
* Tuesday, December 6, 2016 9:17:28 PM IST
*/


//--------------------------------------------------------------------------
public class _ManagerStub extends org.omg.CORBA.portable.ObjectImpl implements HighSpeed.Manager
{


  //----------------------------------------------------------------------
  public void PerformLogOn (String originId, String userName, String passWord, org.omg.CORBA.IntHolder userId, org.omg.CORBA.StringHolder securityKey) throws Isis.InterfaceError
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("PerformLogOn", true);
            if (originId == null || originId.length () > (2))
            throw new org.omg.CORBA.BAD_PARAM (0, org.omg.CORBA.CompletionStatus.COMPLETED_NO);
            if (userName == null || userName.length () > (255))
            throw new org.omg.CORBA.BAD_PARAM (0, org.omg.CORBA.CompletionStatus.COMPLETED_NO);
            if (passWord == null || passWord.length () > (20))
            throw new org.omg.CORBA.BAD_PARAM (0, org.omg.CORBA.CompletionStatus.COMPLETED_NO);
                $out.write_string (originId);
                $out.write_string (userName);
                $out.write_string (passWord);
                $in = _invoke ($out);
                userId.value = $in.read_long ();
                securityKey.value = $in.read_string ();
                if (securityKey.value.length ()         > (255))
                    throw new org.omg.CORBA.MARSHAL(0,org.omg.CORBA.CompletionStatus.COMPLETED_NO);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:Isis/InterfaceError:1.0"))
                    throw Isis.InterfaceErrorHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                PerformLogOn (originId, userName, passWord, userId, securityKey        );
            } finally {
                _releaseReply ($in);
            }
  } // PerformLogOn

  public void PerformLogOff (String originId, int userId, String securityKey) throws Isis.InterfaceError
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("PerformLogOff", true);
            if (originId == null || originId.length () > (2))
            throw new org.omg.CORBA.BAD_PARAM (0, org.omg.CORBA.CompletionStatus.COMPLETED_NO);
            if (securityKey == null || securityKey.length () > (255))
            throw new org.omg.CORBA.BAD_PARAM (0, org.omg.CORBA.CompletionStatus.COMPLETED_NO);
                $out.write_string (originId);
                $out.write_long (userId);
                $out.write_string (securityKey);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:Isis/InterfaceError:1.0"))
                    throw Isis.InterfaceErrorHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                PerformLogOff (originId, userId, securityKey        );
            } finally {
                _releaseReply ($in);
            }
  } // PerformLogOff

  public HighSpeed.TaskResult PerformFunction (String originId, int userId, String securityKey, String functionSelector, Isis.AttributeListHolder attributeList) throws Isis.InterfaceError
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("PerformFunction", true);
            if (originId == null || originId.length () > (2))
            throw new org.omg.CORBA.BAD_PARAM (0, org.omg.CORBA.CompletionStatus.COMPLETED_NO);
            if (securityKey == null || securityKey.length () > (255))
            throw new org.omg.CORBA.BAD_PARAM (0, org.omg.CORBA.CompletionStatus.COMPLETED_NO);
            if (functionSelector == null || functionSelector.length () > (32))
            throw new org.omg.CORBA.BAD_PARAM (0, org.omg.CORBA.CompletionStatus.COMPLETED_NO);
                $out.write_string (originId);
                $out.write_long (userId);
                $out.write_string (securityKey);
                $out.write_string (functionSelector);
                Isis.AttributeListHelper.write ($out, attributeList.value);
                $in = _invoke ($out);
                HighSpeed.TaskResult $result = HighSpeed.TaskResultHelper.read ($in);
                attributeList.value = Isis.AttributeListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:Isis/InterfaceError:1.0"))
                    throw Isis.InterfaceErrorHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return PerformFunction (originId, userId, securityKey, functionSelector, attributeList        );
            } finally {
                _releaseReply ($in);
            }
  } // PerformFunction

  public HighSpeed.TaskResult ExecFunction (String originId, int userId, String securityKey, String functionSelector, Isis.AttributeListHolder attributeList, HighSpeed.ServiceActionListHolder serviceActionList, HighSpeed.ActionAttributeListHolder actionAttributeList, HighSpeed.PartyHolder partyDetails, HighSpeed.RequestResultListHolder requestResultList) throws Isis.InterfaceError
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("ExecFunction", true);
            if (originId == null || originId.length () > (2))
            throw new org.omg.CORBA.BAD_PARAM (0, org.omg.CORBA.CompletionStatus.COMPLETED_NO);
            if (securityKey == null || securityKey.length () > (255))
            throw new org.omg.CORBA.BAD_PARAM (0, org.omg.CORBA.CompletionStatus.COMPLETED_NO);
            if (functionSelector == null || functionSelector.length () > (32))
            throw new org.omg.CORBA.BAD_PARAM (0, org.omg.CORBA.CompletionStatus.COMPLETED_NO);
                $out.write_string (originId);
                $out.write_long (userId);
                $out.write_string (securityKey);
                $out.write_string (functionSelector);
                Isis.AttributeListHelper.write ($out, attributeList.value);
                HighSpeed.ServiceActionListHelper.write ($out, serviceActionList.value);
                HighSpeed.ActionAttributeListHelper.write ($out, actionAttributeList.value);
                HighSpeed.PartyHelper.write ($out, partyDetails.value);
                $in = _invoke ($out);
                HighSpeed.TaskResult $result = HighSpeed.TaskResultHelper.read ($in);
                attributeList.value = Isis.AttributeListHelper.read ($in);
                serviceActionList.value = HighSpeed.ServiceActionListHelper.read ($in);
                actionAttributeList.value = HighSpeed.ActionAttributeListHelper.read ($in);
                partyDetails.value = HighSpeed.PartyHelper.read ($in);
                requestResultList.value = HighSpeed.RequestResultListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:Isis/InterfaceError:1.0"))
                    throw Isis.InterfaceErrorHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return ExecFunction (originId, userId, securityKey, functionSelector, attributeList, serviceActionList, actionAttributeList, partyDetails, requestResultList        );
            } finally {
                _releaseReply ($in);
            }
  } // ExecFunction

  public HighSpeed.TaskResult QueryFunction (String originId, int userId, String securityKey, String functionSelector, Isis.AttributeListHolder attributeList, HighSpeed.ServiceActionListHolder serviceActionList, HighSpeed.ActionAttributeListHolder actionAttributeList, HighSpeed.SubAttributeListHolder subAttributeList, HighSpeed.PartyHolder partyDetails, HighSpeed.RequestResultListHolder requestResultList) throws Isis.InterfaceError
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("QueryFunction", true);
            if (originId == null || originId.length () > (2))
            throw new org.omg.CORBA.BAD_PARAM (0, org.omg.CORBA.CompletionStatus.COMPLETED_NO);
            if (securityKey == null || securityKey.length () > (255))
            throw new org.omg.CORBA.BAD_PARAM (0, org.omg.CORBA.CompletionStatus.COMPLETED_NO);
            if (functionSelector == null || functionSelector.length () > (32))
            throw new org.omg.CORBA.BAD_PARAM (0, org.omg.CORBA.CompletionStatus.COMPLETED_NO);
                $out.write_string (originId);
                $out.write_long (userId);
                $out.write_string (securityKey);
                $out.write_string (functionSelector);
                Isis.AttributeListHelper.write ($out, attributeList.value);
                $in = _invoke ($out);
                HighSpeed.TaskResult $result = HighSpeed.TaskResultHelper.read ($in);
                attributeList.value = Isis.AttributeListHelper.read ($in);
                serviceActionList.value = HighSpeed.ServiceActionListHelper.read ($in);
                actionAttributeList.value = HighSpeed.ActionAttributeListHelper.read ($in);
                subAttributeList.value = HighSpeed.SubAttributeListHelper.read ($in);
                partyDetails.value = HighSpeed.PartyHelper.read ($in);
                requestResultList.value = HighSpeed.RequestResultListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:Isis/InterfaceError:1.0"))
                    throw Isis.InterfaceErrorHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return QueryFunction (originId, userId, securityKey, functionSelector, attributeList, serviceActionList, actionAttributeList, subAttributeList, partyDetails, requestResultList        );
            } finally {
                _releaseReply ($in);
            }
  } // QueryFunction

  public HighSpeed.TaskResult Lookup (String originId, int userId, String securityKey, String functionSelector, HighSpeed.LookupListHolder lookupList) throws Isis.InterfaceError
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("Lookup", true);
            if (originId == null || originId.length () > (2))
            throw new org.omg.CORBA.BAD_PARAM (0, org.omg.CORBA.CompletionStatus.COMPLETED_NO);
            if (securityKey == null || securityKey.length () > (255))
            throw new org.omg.CORBA.BAD_PARAM (0, org.omg.CORBA.CompletionStatus.COMPLETED_NO);
            if (functionSelector == null || functionSelector.length () > (32))
            throw new org.omg.CORBA.BAD_PARAM (0, org.omg.CORBA.CompletionStatus.COMPLETED_NO);
                $out.write_string (originId);
                $out.write_long (userId);
                $out.write_string (securityKey);
                $out.write_string (functionSelector);
                HighSpeed.LookupListHelper.write ($out, lookupList.value);
                $in = _invoke ($out);
                HighSpeed.TaskResult $result = HighSpeed.TaskResultHelper.read ($in);
                lookupList.value = HighSpeed.LookupListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:Isis/InterfaceError:1.0"))
                    throw Isis.InterfaceErrorHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return Lookup (originId, userId, securityKey, functionSelector, lookupList        );
            } finally {
                _releaseReply ($in);
            }
  } // Lookup

  public boolean ValidateSecurityKey (String originId, int userId, String securityKey) throws Isis.InterfaceError
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("ValidateSecurityKey", true);
            if (originId == null || originId.length () > (2))
            throw new org.omg.CORBA.BAD_PARAM (0, org.omg.CORBA.CompletionStatus.COMPLETED_NO);
            if (securityKey == null || securityKey.length () > (255))
            throw new org.omg.CORBA.BAD_PARAM (0, org.omg.CORBA.CompletionStatus.COMPLETED_NO);
                $out.write_string (originId);
                $out.write_long (userId);
                $out.write_string (securityKey);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:Isis/InterfaceError:1.0"))
                    throw Isis.InterfaceErrorHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return ValidateSecurityKey (originId, userId, securityKey        );
            } finally {
                _releaseReply ($in);
            }
  } // ValidateSecurityKey

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:HighSpeed/Manager:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _ManagerStub
